# Based on
# https://github.com/fedarko/pyfastg/blob/master/.github/workflows/main.yml
name: Standalone CI
on: [push, pull_request]
jobs:
  build:
    # https://github.com/fedarko/wotplot/blob/main/.github/workflows/main.yml -
    # Pinning OS to Ubuntu 20.04, since "ubuntu-latest" (22.04, as of writing)
    # dropped support for Python 3.6. Ideally we'd conditionally set the OS
    # based on the Python version but I can't figure out how to do that :|
    runs-on: ubuntu-20.04

    strategy:
      # Run all matrix jobs, even if one of them fails.
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:

      - name: Check out code
        uses: actions/checkout@v4

      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Cython and NumPy (Python >= 3.8 only)
        if: matrix.python-version != '3.6' && matrix.python-version != '3.7'
        run: pip install cython "numpy >= 1.12.0"

      # scikit-bio 0.5.7 can't be installed into python 3.7, so we could try
      # scikit-bio 0.5.8, but then that requires pandas >= 1.5, and then
      # pandas 1.4 imposed a min python version of 3.8. We could just be like
      # "don't use python 3.6 or 3.7", but that's a foul thing to do due to a
      # single dependency having issues, so we can special-case this to still
      # test that python 3.6 and 3.7 work as expected.
      - name: Install Cython, Numpy, and an old version of scikit-bio (Python < 3.8 only)
        if: matrix.python-version == '3.6' || matrix.python-version == '3.7'
        run: |
          pip install cython
          # https://discuss.python.org/t/failed-to-build-numpy-wheel/45561
          sudo apt install -y python3-numpy
          pip install "scikit-bio < 0.5.7"

      - name: Install Qurro (and its pip dependencies)
        run: pip install -e .[dev]

      - name: Install Black, also (no QIIME 2 to worry about conflicts with)
        run: pip install "black >= 22.3.0"
          
      - name: Set up Node.js
        uses: actions/setup-node@v4

      - name: Install Qurro's Node.js development dependencies
        run: npm install -g mocha-headless-chrome nyc@15.1.0 prettier@2.0.5 jshint

      - name: Run tests
        run: |
          make pytest_standalone
          make jstest

      - name: Lint and stylecheck (including using Black to check Python code)
        run: make stylecheck

      # NOTE: For now, we only submit coverage reports from the QIIME 2 CI,
      # since the tests that that CI runs are a superset of those ran by this
      # "standalone" CI. (Also, Codecov wasn't merging them, which caused
      # coverage to be underreported.)
      # - name: Upload code coverage information to Codecov
      #   uses: codecov/codecov-action@v2
